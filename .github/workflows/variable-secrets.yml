# In this Action, we are using env. How to use.
# The env can be stored in 3 differnt places, it could be stored at Job level, Step level, and workflow level. 
name: Exploring Variables and Secrets

on: 
  - push
  

  # docker:  
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Docker Build
  #       run: docker build -t docker.io/dockerusername/imageName:latest

  #     - name: Docker Login
  #       run: docker login --username=dockerusername --password=NIKHATH@100
        
  #     - name: Docker Publish/Push
  #       run: docker push docker.io/dockerusername/imageName:latest

  # deploy:
  #   needs: docker
  #   runs-on: ubuntur-latest
  #   steps: 
  #     - name: Docker run
  #       run: docker run -d -p 8080:80  docker.io/dockerusername/imageName:latest


   ############ How to use Environment Variables at step level ##############
   
  # docker-build: 
  #     runs-on: ubuntu-latest
  #     steps: 
  #       - name: docker build 
  #         env: 
  #           CONTAINER_REGISTRY: docker.io
  #           DOCKER_USERNAME: khajasyeed
  #           IMAGE_NAME: hello-world
  #         run: echo docker build -t $CONTAINER_REGISTRY/$DOCKER_USERNAME/$IMAGE_NAME:latest 

  #       - name: docker login
  #         env: 
  #           DOCKER_USERNAME: khajasyeed
  #           DOCKER_PASSWORD: NIKHATH@100 
  #         run: echo docker login --username $DOCKER_USERNAME --password $DOCKER_PASSWORD

  #       - name: Docker push/publish
  #         env: 
  #           CONTAINER_REGISTRY: docker.io
  #           DOCKER_USERNAME: khajasyeed
  #           IMAGE_NAME: hello-world
  #         run: echo docker push ${{ env.CONTAINER_REGISTRY }}/${{ env.DOCKER_USERNAME }}/$IMAGE_NAME:latest

        # deploy:
        #   needs: docker-build
        #   runs-on: ubuntu:latest
        #   steps: 
        #   - name: deploy
        #     env: 
        #       CONTAINER_REGISTRY: docker.io
        #       DOCKER_USERNAME: khajasyeed
        #       IMAGE_NAME: hello-world
        #     run: echo docker run -d -p 8080:80 $CONTAINER_REGISTRY/$DOCKER_USERNAME/$IMAGE_NAME:latest    
    






              ###### We use Environment Variables at Job Level #######

  # docker-build:
  #   env: 
  #     CONTAINER_REGISTRY: docker.io
  #     DOCKER_USERNAME: khajasyeed
  #     IMAGE_NAME: hello-world
  #     DOCKER_PASSWORD: NIKHATH@100
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: docker build
  #       run: echo docker build -t ${{ env.CONTAINER_REGISTRY }}/${{ env.DOCKER_USERNAME }}/$IMAGE_NAME:latest

  #     - name: docker login
  #       run: docker login --username ${{ env.DOCKER_USERNAME }} --password ${{ env.DOCKER_PASSWORD }}

  #     - name: docker push/publish
  #       run: echo docker push ${{ env.CONTAINER_REGISTRY }}/${{ env.DOCKER_USERNAME }}/$IMAGE_NAME:latest 

  # deploy: 
  #   env: 
  #     CONTAINER_REGISTRY: docker.io
  #     DOCKER_USERNAME: khajasyeed
  #     IMAGE_NAME: hello-world
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: deploy
  #       run: echo docker run -d -p 8080:80 ${{ env.CONTAINER_REGISTRY }}/${{ env.DOCKER_USERNAME }}/$IMAGE_NAME:latest


     ############ using Environment variables at workflow level ############# 
     
 
env: 
  CONTAINER_REGISTRY: docker.io
  DOCKER_USERNAME: khajasyeed
  IMAGE_NAME: hello-world
  DOCKER_PASSWORD: NIKHATH@100

jobs:  
  docker-build: 
    runs-on: ubuntu-latest
    steps:
     - name: docker build
       run: echo docker build -t ${{ env.CONTAINER_REGISTRY }}/${{ env.DOCKER_USERNAME }}/$IMAGE_NAME:latest

     - name: docker login
       run: docker login --username ${{ env.DOCKER_USERNAME }} --password ${{ env.DOCKER_PASSWORD }}

     - name: docker push/publish
       run: echo docker push ${{ env.CONTAINER_REGISTRY }}/${{ env.DOCKER_USERNAME }}/$IMAGE_NAME:latest

  deploy: 
    needs: docker-build
    runs-on: ubuntu-latest
    steps:
     - name: deploy
       run: echo docker run -d -p 8080:80 ${{ env.CONTAINER_REGISTRY }}/${{ env.DOCKER_USERNAME }}/$IMAGE_NAME:latest
         


      

  
      
        